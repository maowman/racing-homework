# image based on ubuntu 22.04
FROM ubuntu:22.04

# docker specific tweaks, see
# https://github.com/docker/docker/blob/9a9fc01af8fb5d98b8eec0740716226fadb3735c/contrib/mkimage/debootstrap#L85-L105
RUN echo 'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };' > /etc/apt/apt.conf.d/docker-clean \
    && echo 'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true"; };' >> /etc/apt/apt.conf.d/docker-clean \
    && echo 'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";' >> /etc/apt/apt.conf.d/docker-clean

# update package repository information and install with no prompt
# bash-completion -> bash auto-complete
# build-essential -> compiler
# byobu -> terminal multiplexer
# ca-certificates -> certificate manager
# curl -> internet commuincation library
# feh -> image viewer
# git -> version control
# gnupg2 -> encryption
# keyboard-configuration -> keyboard configuration
# locales -> configure locale
# lsb-release -> linux standard base
# net-tools -> network configurator
# python3-pip -> python package manager
# sudo -> executing commands as root
# swig -> wrapper for C/C++ to connect to scripting language
# tmux -> terminal multiplexer
# tzdata -> timezone
# vim -> command line text editor
# wget -> downloader
RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y \
    bash-completion \
    build-essential \
    byobu \
    ca-certificates \
    curl \
    feh \
    git \
    gnupg2 \
    keyboard-configuration \
    locales \
    lsb-release \
    net-tools \
    python3-pip \
    sudo \
    swig \
    tmux \
    tzdata \
    vim \
    wget \
    && apt-get clean && apt-get autoremove

# configure timezone to taipei
# configure locale to en_US_UTF-8 and export it once
RUN TZ=Asia/Taipei \
    && ln -snf /usr/share/zoneinfo/${TZ} /etc/localtime \
    && echo ${TZ} > /etc/timezone \
    && dpkg-reconfigure -f noninteractive tzdata \
    && sudo locale-gen en_US en_US.UTF-8 \
    && update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8 \
    && export LANG=en_US.UTF-8

# add apt key for installing ros2
# python3-colcon-common-extensions -> build ros2 workspace
# python3-rosdep -> ros dependencies manager
# ros-humble-desktop-full -> ros2
# ros-humble-plotjuggler -> ros2 plotting tool
# ros-humble-ros2-socketcan -> ros2 can driver
# ros-humble-teleop-twist-keyboard -> ros2 keyboard control
# initialize ros python environment as root
RUN curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg \
    && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu jammy main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null \
    && sudo apt update && apt-get install -y \
    python3-colcon-common-extensions \
    python3-rosdep \
    ros-humble-desktop-full \
    ros-humble-plotjuggler \
    ros-humble-ros2-socketcan \
    ros-humble-teleop-twist-keyboard \
    && apt-get clean && apt-get autoremove \
    && rosdep init

# adding user "docker" on host
# password "docker" for user 'root' and 'docker'
RUN useradd --create-home --shell /bin/bash docker \
    && usermod -aG sudo docker \
    && echo 'docker\ndocker' | passwd \
    && echo 'docker\ndocker' | passwd docker

# change to user "docker" and change to home directory
USER docker
WORKDIR /home/docker

# update python enviroment in non-user directory
# prebuild ws once, using bash warpper for avoiding wierd problems
RUN rosdep update \
    && bash -c 'source /opt/ros/humble/setup.bash && mkdir -p ws/src && cd ws && colcon build --symlink-install'

# copy .bashrc for executing it everytime attaching to the container and modify it to
# export LANG=en_US.UTF-8 -> use en_US.UTF-8 locale everytime
# export PATH=:${PATH}:~/.local/bin -> add local(user specific) python library path to PATH environment variable
# source /opt/ros/humble/setup.bash -> source ros
# source /usr/share/colcon_cd/function/colcon_cd.sh -> setup colcon_cd
# export _colcon_cd_root=/opt/ros/humble/ -> setup colcon_cd
# source /usr/share/colcon_argcomplete/hook/colcon-argcomplete.bash -> colcon tab completion
# source ~/ws/install/setup.bash -> source ws
RUN cp /etc/skel/.bashrc /home/docker \
    && echo 'export LANG=en_US.UTF-8' >> ~/.bashrc \
    && echo 'export PATH=:${PATH}:~/.local/bin' >> ~/.bashrc \
    && echo 'source /opt/ros/humble/setup.bash' >> ~/.bashrc \
    && echo 'source /usr/share/colcon_cd/function/colcon_cd.sh' >> ~/.bashrc \
    && echo 'export _colcon_cd_root=/opt/ros/humble/' >> ~/.bashrc \
    && echo 'source /usr/share/colcon_argcomplete/hook/colcon-argcomplete.bash' >> ~/.bashrc \
    && echo 'source ~/ws/install/setup.bash' >> ~/.bashrc
